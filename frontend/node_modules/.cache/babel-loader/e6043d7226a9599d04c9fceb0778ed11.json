{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\AlleyAcademy\\\\frontend\\\\src\\\\components\\\\MapContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst MapContainer = _ref => {\n  _s();\n\n  let {\n    searchPlace,\n    name\n  } = _ref;\n  console.log(searchPlace);\n  useEffect(() => {\n    const container = document.getElementById(\"myMap\");\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 4\n    };\n    const map = new kakao.maps.Map(container, options);\n    const geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch(searchPlace, function (result, status) {\n      // 정상적으로 검색이 완료됐으면\n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x); // 결과값으로 받은 위치를 마커로 표시합니다\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: coords\n        }); // 인포윈도우로 장소에 대한 설명을 표시합니다\n\n        var infowindow = new kakao.maps.InfoWindow({\n          content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">' + name + '</div>'\n        });\n        infowindow.open(map, marker); // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\n\n        map.setCenter(coords);\n      }\n    });\n    ps.keywordSearch(searchPlace, placesSearchCB);\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        let bounds = new kakao.maps.LatLngBounds();\n\n        for (let i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        }\n\n        map.setBounds(bounds);\n      }\n    }\n\n    function displayMarker(place) {\n      let marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      });\n    }\n  }, [searchPlace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"myMap\",\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapContainer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MapContainer;\nexport default MapContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapContainer\");","map":{"version":3,"names":["React","useEffect","kakao","window","MapContainer","searchPlace","name","console","log","container","document","getElementById","options","center","maps","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","Marker","position","infowindow","InfoWindow","content","open","setCenter","ps","keywordSearch","placesSearchCB","data","pagination","bounds","LatLngBounds","i","length","displayMarker","extend","setBounds","place","width","height"],"sources":["C:/project/AlleyAcademy/frontend/src/components/MapContainer.jsx"],"sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\n\r\nconst { kakao } = window;\r\n\r\nconst MapContainer = ({ searchPlace , name}) => {\r\nconsole.log(searchPlace);\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"myMap\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 4,\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    geocoder.addressSearch(searchPlace, function(result, status) {\r\n\r\n        // 정상적으로 검색이 완료됐으면\r\n         if (status === kakao.maps.services.Status.OK) {\r\n\r\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n            // 결과값으로 받은 위치를 마커로 표시합니다\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords\r\n            });\r\n\r\n            // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n            var infowindow = new kakao.maps.InfoWindow({\r\n                content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">'+name+'</div>'\r\n            });\r\n            infowindow.open(map, marker);\r\n\r\n            // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n            map.setCenter(coords);\r\n        }\r\n    });\r\n\r\n    ps.keywordSearch(searchPlace, placesSearchCB);\r\n\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n          displayMarker(data[i]);\r\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n        }\r\n\r\n        map.setBounds(bounds);\r\n      }\r\n    }\r\n\r\n    function displayMarker(place) {\r\n      let marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: new kakao.maps.LatLng(place.y, place.x),\r\n      });\r\n    }\r\n  }, [searchPlace]);\r\n\r\n    return (\r\n        <div id='myMap' style={{\r\n            width: '100%',\r\n            height: '500px'\r\n        }}></div>\r\n    );\r\n}\r\n\r\nexport default MapContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}